version: 0.2

phases:
  install:
    commands:
      - echo Entered the install phase....
      #- export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
      #- export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
      #- export AWS_DEFAULT_REGION=$REGION
      #- export AWS_DEFAULT_OUTPUT="json"
      - export ENVIRONMENT=sock-shop
      - chmod +x ./scripts/setup_k8s_tools.sh
      - ./scripts/setup_k8s_tools.sh

  pre_build:
    commands:
      - echo $ENVIRONMENT
      - echo "Install completed on" `date`
      - echo "Connecting to EKS cluster:" $CLUSTER_NAME
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
      - echo ${ENVIRONMENT}
      - echo "Checking if Kubernetes namespace exists (${ENVIRONMENT})"
      - |
        if kubectl get namespaces | grep $ENVIRONMENT; then
          echo "Namespace ${ENVIRONMENT} exists."
        else
          echo "Namespace ${ENVIRONMENT} does not exist. Creating it..."
          kubectl create namespace $ENVIRONMENT
        fi

  build:
    commands:
      - echo Entered the Deployment phase...
      - echo Deployment started on $(date)
      - helm list -n $ENVIRONMENT
      - echo Upgrading the Helm chart...
      - helm upgrade sock-shop charts/helm-values --values charts/helm-values/values-${ENVIRONMENT}.yaml -n $ENVIRONMENT

  post_build:
    commands:
      - echo "Deployment to EKS COMPLETED on `date`"
      #- echo "If api-gateway is deployed, try this following URL: http://$(kubectl get ingress -n ${ENVIRONMENT} | awk '{print $3}'; [tail -n +2])"
      #-
      #  response=$(curl -Is https://www-${ENVIRONMENT}.vetops.net/api/gateway/owners/0)
      #  http_status=$(echo "$response" | head -n 1 | awk '{print $2}')
      #  if [ "$http_status" == "200" ]; then
      #    echo "The request succeeded with HTTP response code 200 (OK)"
      #  else
      #    echo "The request failed with HTTP response code $http_status"
      #  fi
